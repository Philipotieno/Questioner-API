FORMAT: 1A
HOST: https://maswala2019.herokuapp.com

# Questioner API

Questioner helps the meetup organizer prioritize questions to be answered. Other users can vote on asked questions and they bubble to the top or bottom of the log.estioner API

## Authentication
This API uses Basic Authentication.

The parameters that are needed to be sent for this type of authentication are as follows:
+ `username`
+ `password`

## Register new users Collection [/api/v2/auth/register]

### Register user [POST]
Endpoint to register user!

+ Request (application/json)

        {
            "firstname":"philip", 
            "lastname":"philip", 
            "username":"philip", 
            "phone_number":"0703473367", 
            "email":"philip@gmail.com",
            "password":"mypassword"
        }

+ Response 201 (application/json)

    + Headers

            Location: /api/v2/auth/register

    + Body

            {
                "message": "User Registered successfully!",
                "status": 201,
                "data": {
                    "firstname": "philip",
                    "lastname": "philip",
                    "lastname": "philip",
                    "phone_number":"0703473367", 
                    "email":"philip@gmail.com",
                    "user_id": 628
                }
            }


## Log ni users Collection [/api/v2/auth/login]

### Sign in [POST]
Endpoint to logins in a users

+ Request (application/json)

        {
            "username":"philiopd", 
            "password":"mypassword"
        }

+ Response 200 (application/json)

    + Headers

            Location: /api/v2/auth/login

    + Body
    
            {
                "message": "You are now logged in",
                "status": 200,
                "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NDgzOTMxNzIsIm5iZiI6MTU0ODM5MzE3MiwianRpIjoiNGIwMTc1NTgtMTQ1Mi00NmRkLThiNmMtOWMwNGE3MjU5NDFmIiwiZXhwIjoxNTQ4Mzk0MDcyLCJpZGVudGl0eSI6ImZyZWRyeXIiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.dqU_4zE3dvg2ItZi7HkqVztLPFmMRTifKLlt6GHdfj0"
            }

## Log ni admin [/api/v2/auth/login]
### Sign admin [POST]
Endpoint to log in admin
+ Request (application/json)

        {
            "username":"wiseadmin", 
            "password":"mypassword"
        }

+ Response 200 (application/json)

    + Headers

            Location: /api/v2/auth/login

    + Body

            {
                "message": "You are now logged in",
                "status": 200,
                "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NDgzOTMxNzIsIm5iZiI6MTU0ODM5MzE3MiwianRpIjoiNGIwMTc1NTgtMTQ1Mi00NmRkLThiNmMtOWMwNGE3MjU5NDFmIiwiZXhwIjoxNTQ4Mzk0MDcyLCJpZGVudGl0eSI6ImZyZWRyeXIiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.dqU_4zE3dvg2ItZi7HkqVztLPFmMRTifKLlt6GHdfj0"
            }
        
## Create meetup Collection [/api/v2/meetups]

### Post meetup [POST]
Endpoint to post meetups{Admin tokens requrired]

+ Request (application/json)

        {
            "topic":"wiseadmin", 
            "location":"wiseadmin", 
            "happening_on":"1-1-2019", 
            "tags":"mypsword"
        }

+ Response 201 (application/json)

    + Headers

            Location: /api/v2/meetups

    + Body

            {
                "message": "Meetup created!",
                "status": 201,
                "Meetup": {
                    "created_on": "Fri, 25 Jan 2019 08:12:42 GMT",
                    "happening_on": "Tue, 01 Jan 2019 00:00:00 GMT",
                    "topic":"wiseadmin", 
                    "location":"wiseadmin", 
                    "meetup_id": 45, 
                    "tags":"mypsword"
                }
            }
        
## Get one meetup Collection [/api/v2/meetups/1]

### Get single meetup [GET]
Endpoint to get a single meetup

+ Response 200 (application/json)

        {
            "Meetup": {
                "created_on": "Thu, 24 Jan 2019 20:40:48 GMT",
                "happening_on": "Tue, 01 Jan 2019 00:00:00 GMT",
                "location": "lodacdtion",
                "meetup_id": 3,
                "tags": "flask, django",
                "topic": "Aprrtrrlk"
            }
        }

## Get all meetup Collection [/api/v2/meetups]

### Get all meetups [GET]
Endpoint to get all meetups

+ Response 200 (application/json)

        {
            "Meetup": {
                "created_on": "Thu, 24 Jan 2019 20:40:48 GMT",
                "happening_on": "Tue, 01 Jan 2019 00:00:00 GMT",
                "location": "lodacdtion",
                "meetup_id": 3,
                "tags": "flask, django",
                "topic": "Aprrtrrlk"
            },
            
            "Meetup": {
                "created_on": "Thu, 24 Jan 2019 20:40:48 GMT",
                "happening_on": "Tue, 01 Jan 2019 00:00:00 GMT",
                "location": "lodacdtion",
                "meetup_id": 3,
                "tags": "flask, django",
                "topic": "Aprrtrrlk"
            },
            
            "Meetup": {
                "created_on": "Thu, 24 Jan 2019 20:40:48 GMT",
                "happening_on": "Tue, 01 Jan 2019 00:00:00 GMT",
                "location": "lodacdtion",
                "meetup_id": 3,
                "tags": "flask, django",
                "topic": "Aprrtrrlk"
            }
        }

 
## Post a question Collection [/api/v2/questions/1]

### Post question [POST]
Endpoint to post a question{user token required]

+ Request (application/json)

        {
            "title":"wiseadmin", 
            "body":"wisisissi", 
        }

+ Response 201 (application/json)

    + Headers

            Location: /api/v2/questions/1

    + Body

            {
                "data": {
                    "body": "wisisissi",
                    "created_on": "Fri, 25 Jan 2019 08:12:42 GMT",
                    "meetup_id": 5,
                    "question_id": 18,
                    "title": "whejjjjjuby",
                    "user_id": 67
                },
                "message": "Question created!",
                "status": 201
            }
## Get all quetions Collection [/api/v2/questions/]

### Get all questions [GET]
Endpoint to get all questions asked

+ Response 201 (application/json)

        "Questions": [
            {
                "body": "Irrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr",
                "created_on": "Fri, 25 Jan 2019 02:51:08 GMT",
                "meetup_id": 5,
                "question_id": 17,
                "title": "whatejjjjjuby",
                "user_id": 67,
                "votes": 0
            },
            {
                "body": "Irrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr",
                "created_on": "Fri, 25 Jan 2019 08:12:42 GMT",
                "meetup_id": 5,
                "question_id": 18,
                "title": "whejjjjjuby",
                "user_id": 67,
                "votes": 0
            },
            {
                "body": "I am newtop rogramm is python used for",
                "created_on": "Thu, 24 Jan 2019 22:42:58 GMT",
                "meetup_id": 3,
                "question_id": 2,
                "title": "whats reeeuby",
                "user_id": 1,
                "votes": -4
            }
        ]

## Get specific quetions Collection [/api/v2/questions/1]

### Get one questions [GET]
Endpoint to get a single question

+ Response 201 (application/json)

        "Questions": [
            {
                "body": "Irrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr",
                "created_on": "Fri, 25 Jan 2019 02:51:08 GMT",
                "meetup_id": 5,
                "question_id": 17,
                "title": "whatejjjjjuby",
                "user_id": 67,
                "votes": 0
            }
        ]

## Post a comment [/api/v2/1/comments]

### Post comment [POST]
Endpoint to comment on a question

+ Request (application/json)

        {
            "body":"wisisissi", 
        }

+ Response 201 (application/json)

    + Headers

            Location: /api/v2/1/comments

    + Body

            {
                "data": {
                    "body": "wisisissi",
                    "created_on": "Fri, 25 Jan 2019 08:12:42 GMT",
                    "question_id": 18,
                    "user_id": 67
                },
                "message": "Comment posted successfully!",
                "status": 201
            }

## Upvote a question [/api/v2/questions/1/upvote]

### Upvote [PATCH]
Endpoint to upvote a question
+ Request (application/json)

        {
            "vote":"Upvote", 
        }
+ Response 400 (application/json)

    + Headers

            Location: /api/v2/questions/<int:question_id>/upvote

    + Body

            {
                "data": {
                    "question_id": 18,
                    "votes": 67
                },
                "message": "Question upvoted succesfully",
                "status": 400
            }
        
## Downvote a question [/api/v2/questions/1/downvote]

### Downvote [PATCH]
Endpoint to downvote a question

+ Request (application/json)

        {
            "vote":"Downvote", 
        }
+ Response 400 (application/json)

    + Headers

            Location: /api/v2/questions/1/downvote

    + Body

            {
                "data": {
                    "question_id": 18,
                    "votes": 67
                },
                "message": "Question downvoted succesfully",
                "status": 400
            }
        
## Rsvp a meetup [/api/v2/meetups/1/rsvp]

### Rsvps [POST]
Endpoint to rsvp a meeetup

+ Request (application/json)

            {
                "response":"yes"
            }
        
+ Response 400 (application/json)

    + Headers

            Location: /api/v2/meetups/1/rsvp

    + Body

            {
                "data": {
                    "meetup_id": 8,
                    "response": "yes",
                    "rsvp_id": 1,
                    "user_id": 2
                },
                "message": "Rsvp posted successfully!",
                "status": 200
            }